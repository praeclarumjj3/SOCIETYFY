apply plugin: 'com.android.application'

def Google_APi_Key = '"'+google_maps_api_key+'"'?:'"Define api key"';
def STRING = 'String'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    lintOptions{
        checkReleaseBuilds false
        abortOnError false

    }

    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }

    defaultConfig {
        applicationId "com.example.societyfy"
        minSdkVersion 27
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        each {type ->
            type.buildConfigField STRING, "google_maps_api_key", Google_APi_Key
        }
        manifestPlaceholders =[
                            Google_Api : Google_APi_Key
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:24.2.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:24.2.1'
    //noinspection GradleCompatible
    implementation 'com.android.support:cardview-v7:24.2.1'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'de.hdodenhof:circleimageview:2.1.0'
    //noinspection GradleCompatible
    implementation 'com.android.support:recyclerview-v7:28.0.0'

    implementation 'com.google.firebase:firebase-analytics:17.2.1'
    implementation 'com.google.firebase:firebase-auth:19.2.0'
    implementation 'com.google.firebase:firebase-storage:19.1.0'
    implementation 'com.google.firebase:firebase-firestore:21.3.1'
    implementation "com.firebaseui:firebase-ui-auth:4.3.1"
    implementation "com.firebaseui:firebase-ui-firestore:4.3.1"

    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.google.maps.android:android-maps-utils:0.5'

    implementation 'com.google.maps:google-maps-services:0.10.2'
    implementation 'org.slf4j:slf4j-simple:1.7.25'

    def nav_version = "2.1.0"

    // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    dependencies {
        def lifecycle_version = "2.1.0"

        // ViewModel and LiveData
        implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
        // alternatively - just ViewModel
        implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
        // For Kotlin use lifecycle-viewmodel-ktx
        // alternatively - just LiveData
        implementation "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
        // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI
        //     AndroidX libraries use this lightweight import for Lifecycle
        implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

        //noinspection LifecycleAnnotationProcessorWithJava8
        annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
        // For Kotlin use kapt instead of annotationProcessor
        // alternately - if using Java8, use the following instead of lifecycle-compiler
        implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

        // optional - ReactiveStreams support for LiveData
        implementation "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"
        // For Kotlin use lifecycle-reactivestreams-ktx

        // optional - Test helpers for LiveData
        testImplementation "androidx.arch.core:core-testing:$lifecycle_version"
    }

}
apply plugin: 'com.google.gms.google-services'
